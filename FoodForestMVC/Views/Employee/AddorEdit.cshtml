@using FoodForestMVC.Models
@model EmployeeVM

@{
    ViewBag.Title = "AddorEdit";
    Layout = null;
}

<br />

@using (Html.BeginForm("AddorEdit", "Employee", FormMethod.Post, new { enctype = "multipart/form-data", onSubmit = "return jQueryAjaxPost(this);", data_restUrl = Url.Action("AddorEdit", "Employee", new { id = 0 }) }))//data-resetUrl
{
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.ImagePath)

            <div class="col-md-2">
                <div class="form-group">
                    <div class="col-md-10" style="text-align:center">
                        <img src="@Url.Content(Model.ImagePath)" style="margin:10px;height:200px;width:200px" id="imgphotoPreview" />
                        <label for="files" class="btn" style="background-color:#16a765; color:white; height:30px; align-content:center ">Upload Photo</label>
                        <input id="files" style="visibility:hidden;" type="file" accept="image/jpg,image/png" name="ImageUpload"
                               onchange="ShowImagePreview(this, document.getElementById('imgphotoPreview'))" />
                    </div>
                </div>
            </div>

            <div class="col-md-5">
                <div class="form-group">
                    @Html.LabelFor(model => model.EmployeeId, htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-7 form-inline">
                        @Html.EditorFor(model => model.EmployeeId, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EmployeeId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-7 form-inline">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div> 

                <div class="form-group">
                    @Html.LabelFor(model => model.Dob, htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-7 form-inline">
                        @Html.EditorFor(model => model.Dob, new { htmlAttributes = new { @class = "form-control datepicker" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>
                
                <div class="form-group">
                    @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-7 form-inline">
                        @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                    </div>
                </div>

                
                <div class="form-group">
                    @Html.LabelFor(model => model.ResignDate, htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-7 form-inline">
                        @Html.EditorFor(model => model.ResignDate, new { htmlAttributes = new { @class = "form-control datepicker" } })
                        @Html.ValidationMessageFor(model => model.ResignDate, "", new { @class = "text-danger" })
                    </div>
                </div> 
                
            </div>

            <div class="col-md-5">
                <div class="form-group">
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.MiddleName, htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-7 form-inline">
                        @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-7 form-inline">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-7 form-inline">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.JoinDate, htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-7 form-inline">
                        @Html.EditorFor(model => model.JoinDate, new { htmlAttributes = new { @class = "form-control datepicker" } })
                        @Html.ValidationMessageFor(model => model.JoinDate, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-7 form-inline">
                        @Html.DropDownListFor(m => m.Status,
                                            new SelectList(Enum.GetValues(typeof(EmployeeStatus))),
                                            "Select Status", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-5"></div>
                    <div class="col-md-7 form-inline">
                        <input type="submit" value="Save" class="btn btn-primary" style="width:100px"   />
                        @if (Model.Id != 0)
                        {
                            <a class="btn btn-success" onclick="refreshAddNewTab('@Url.Action("AddorEdit","Employee",new { id = 0 })', false)"><i class="fade fa-plus"></i>Add New</a>
                        }
                    </div>
                    </div>
                </div>

        </div>
    </div>
}


